// Simplified Meshtastic protobuf definitions for core messaging
// Based on Meshtastic protocol v2.x

syntax = "proto3";

package meshtastic;

// Core message packet structure
message MeshPacket {
    uint32 from = 1;        // Node ID that sent the packet
    uint32 to = 2;          // Node ID this packet is destined to (0 for broadcast)
    uint32 id = 3;          // Unique packet ID
    PayloadVariant payload = 4; // The actual payload
    uint32 hop_limit = 5;   // Maximum number of hops allowed
    bool want_ack = 6;      // True if sender wants acknowledgment
    uint32 priority = 7;    // Message priority (0-255)
    uint32 rx_time = 8;     // Time packet was received (seconds since 1970)
}

// Payload variants
message PayloadVariant {
    oneof payload {
        Data encrypted = 1;     // Encrypted payload
        Data decoded = 2;       // Decrypted payload
    }
}

// Raw data container
message Data {
    uint32 portnum = 1;     // Application port number
    bytes payload = 2;      // Raw payload bytes
    bool want_response = 3; // True if sender wants a response
    uint32 dest = 4;        // Ultimate destination for this message
    uint32 source = 5;      // Original source of this message
    uint32 request_id = 6;  // Request ID for request/response matching
    uint32 reply_id = 7;    // Reply ID matching a request
    uint32 emoji = 8;       // Optional emoji reaction
}

// Text message
message User {
    string id = 1;          // Unique user ID
    string long_name = 2;   // Full name
    string short_name = 3;  // 4-character short name
    bytes macaddr = 4;      // MAC address
    HardwareModel hw_model = 5; // Hardware model
    bool is_licensed = 6;   // Licensed amateur radio operator
    Role role = 7;          // Device role
}

// Node information
message NodeInfo {
    uint32 num = 1;         // Node number
    User user = 2;          // User information
    Position position = 3;  // Last known position
    int32 snr = 4;          // Signal to noise ratio
    uint32 last_heard = 5;  // Time last heard (seconds since 1970)
    DeviceMetrics device_metrics = 6; // Device telemetry
}

// Position information
message Position {
    double latitude_i = 1;  // Latitude * 1e7
    double longitude_i = 2; // Longitude * 1e7
    int32 altitude = 3;     // Altitude in meters
    uint32 time = 4;        // Time of position fix
    LocationSource location_source = 5; // Source of location
    int32 altitude_source = 6; // Source of altitude
    uint32 timestamp = 7;   // Timestamp of position
    uint32 timestamp_millis_adjust = 8; // Millisecond adjustment
    int32 altitude_hae = 9; // Height above ellipsoid
    uint32 altitude_geoidal_separation = 10; // Geoidal separation
    uint32 PDOP = 11;       // Position dilution of precision
    uint32 HDOP = 12;       // Horizontal dilution of precision
    uint32 VDOP = 13;       // Vertical dilution of precision
    uint32 GPS_accuracy = 14; // GPS accuracy in mm
    uint32 ground_speed = 15; // Ground speed in mm/s
    uint32 ground_track = 16; // Ground track in degrees * 1e5
    uint32 fix_quality = 17; // Fix quality
    uint32 fix_type = 18;   // Fix type
    uint32 sats_in_view = 19; // Satellites in view
    int32 sensor_id = 20;   // Sensor ID
    uint32 next_update = 21; // Next update time
    uint32 seq_number = 22; // Sequence number
    bool precision_bits = 23; // Precision bits for privacy
}

// Device telemetry
message DeviceMetrics {
    uint32 battery_level = 1;    // Battery level 0-100%
    float voltage = 2;           // Battery voltage
    float channel_utilization = 3; // Channel utilization
    float air_util_tx = 4;       // Air utilization TX
    uint32 uptime_seconds = 5;   // Uptime in seconds
}

// Telemetry data
message Telemetry {
    uint32 time = 1;        // Timestamp
    TelemetryVariant variant = 2; // Telemetry data
}

message TelemetryVariant {
    oneof variant {
        DeviceMetrics device_metrics = 1;
        EnvironmentMetrics environment_metrics = 2;
        PowerMetrics power_metrics = 3;
    }
}

message EnvironmentMetrics {
    float temperature = 1;   // Temperature in Celsius
    float relative_humidity = 2; // Relative humidity %
    float barometric_pressure = 3; // Pressure in hPa
    float gas_resistance = 4; // Gas resistance
    float voltage = 5;       // Voltage
    float current = 6;       // Current
    float lux = 7;          // Light level
    float white_lux = 8;    // White light level
    float ir_lux = 9;       // IR light level
    float uv_lux = 10;      // UV light level
    float wind_direction = 11; // Wind direction
    float wind_speed = 12;   // Wind speed
    float weight = 13;       // Weight
}

message PowerMetrics {
    float ch1_voltage = 1;   // Channel 1 voltage
    float ch1_current = 2;   // Channel 1 current
    float ch2_voltage = 3;   // Channel 2 voltage
    float ch2_current = 4;   // Channel 2 current
    float ch3_voltage = 5;   // Channel 3 voltage
    float ch3_current = 6;   // Channel 3 current
}

// Routing information
message Routing {
    RouteDiscovery route_request = 1;
    RouteDiscovery route_reply = 2;
    ErrorReason error_reason = 3;
}

message RouteDiscovery {
    repeated uint32 route = 1; // Route (list of node IDs)
}

// Configuration and settings
message Config {
    DeviceConfig device = 1;
    PositionConfig position = 2;
    PowerConfig power = 3;
    NetworkConfig network = 4;
    DisplayConfig display = 5;
    LoRaConfig lora = 6;
    BluetoothConfig bluetooth = 7;
}

message DeviceConfig {
    Role role = 1;
    bool serial_enabled = 2;
    bool debug_log_enabled = 3;
    uint32 button_gpio = 4;
    uint32 buzzer_gpio = 5;
    RebootOTASeconds reboot_ota_seconds = 6;
    uint32 shutdown_on_power_loss = 7;
}

message PositionConfig {
    uint32 position_broadcast_secs = 1;
    bool position_broadcast_smart = 2;
    bool fixed_position = 3;
    bool gps_enabled = 4;
    uint32 gps_update_interval = 5;
    uint32 position_flags = 6;
    int32 rx_gpio = 7;
    int32 tx_gpio = 8;
    uint32 gps_en_gpio = 9;
}

message PowerConfig {
    bool is_power_saving = 1;
    uint32 on_battery_shutdown_after_secs = 2;
    uint32 adc_multiplier_override = 3;
    uint32 wait_bluetooth_secs = 4;
    uint32 sds_secs = 5;
    uint32 ls_secs = 6;
    uint32 min_wake_secs = 7;
    uint32 device_battery_ina_address = 8;
}

message NetworkConfig {
    bool wifi_enabled = 1;
    string wifi_ssid = 2;
    string wifi_psk = 3;
    string ntp_server = 4;
    bool eth_enabled = 5;
    AddressMode address_mode = 6;
    bool ipv4_config = 7;
    fixed32 ipv4 = 8;
    fixed32 gateway = 9;
    fixed32 subnet = 10;
    fixed32 dns = 11;
}

message DisplayConfig {
    uint32 screen_on_secs = 1;
    GpsCoordinateFormat gps_format = 2;
    uint32 auto_screen_carousel_secs = 3;
    bool compass_north_top = 4;
    bool flip_screen = 5;
    DisplayUnits units = 6;
    OledType oled = 7;
    DisplayMode displaymode = 8;
    bool heading_bold = 9;
    bool wake_on_tap_or_motion = 10;
}

message LoRaConfig {
    bool use_preset = 1;
    ModemPreset modem_preset = 2;
    uint32 bandwidth = 3;
    uint32 spread_factor = 4;
    uint32 coding_rate = 5;
    uint32 frequency_offset = 6;
    RegionCode region = 7;
    uint32 hop_limit = 8;
    bool tx_enabled = 9;
    int32 tx_power = 10;
    uint32 channel_num = 11;
    bool override_duty_cycle = 12;
    bool sx126x_rx_boosted_gain = 13;
    uint32 override_frequency = 14;
    bool pa_fan_disabled = 15;
}

message BluetoothConfig {
    bool enabled = 1;
    PairingMode mode = 2;
    uint32 fixed_pin = 3;
}

// Enums
enum HardwareModel {
    UNSET = 0;
    TLORA_V2 = 1;
    TLORA_V1 = 2;
    TLORA_V2_1_1P6 = 3;
    TBEAM = 4;
    HELTEC_V2_0 = 5;
    TBEAM_V0P7 = 6;
    T_ECHO = 7;
    TLORA_V1_1P3 = 8;
    RAK4631 = 9;
    HELTEC_V2_1 = 10;
    HELTEC_V1 = 11;
    LILYGO_TBEAM_S3_CORE = 12;
    RAK11200 = 13;
    NANO_G1 = 14;
    TLORA_V2_1_1P8 = 15;
    TLORA_T3_S3 = 16;
    NANO_G1_EXPLORER = 17;
    NANO_G2_ULTRA = 18;
    LORA_RELAY_V1 = 19;
    NRF52840DK = 20;
    PPR = 21;
    GENIEBLOCKS = 22;
    NRF52_UNKNOWN = 23;
    PORTDUINO = 24;
    ANDROID_SIM = 25;
    DIY_V1 = 26;
    NRF52840_PCA10059 = 27;
    DR_DEV = 28;
    M5STACK = 29;
    HELTEC_V3 = 30;
    HELTEC_WSL_V3 = 31;
    BETAFPV_2400_TX = 32;
    BETAFPV_900_NANO_TX = 33;
    RPI_PICO = 34;
    HELTEC_WIRELESS_TRACKER = 35;
    HELTEC_WIRELESS_PAPER = 36;
    T_DECK = 37;
    T_WATCH_S3 = 38;
    PICOMPUTER_S3 = 39;
    HELTEC_HT62 = 40;
    EBYTE_ESP32_S3 = 41;
    ESP32_S3_PICO = 42;
    CHATTER_2 = 43;
    HELTEC_WIRELESS_PAPER_V1_0 = 44;
    HELTEC_WIRELESS_TRACKER_V1_0 = 45;
    UNPHONE = 46;
    TD_LORAC = 47;
    CDEBYTE_EORA_S3 = 48;
    TWC_MESH_V4 = 49;
    NRF52_PROMICRO_DIY = 50;
    RADIOMASTER_900_BANDIT_NANO = 51;
    HELTEC_CAPSULE_SENSOR_V3 = 52;
    HELTEC_VISION_MASTER_T190 = 53;
    HELTEC_VISION_MASTER_E213 = 54;
    HELTEC_VISION_MASTER_E290 = 55;
    HELTEC_MESH_NODE_T114 = 56;
    SENSECAP_INDICATOR = 57;
    TRACKER_T1000_E = 58;
    RAK3172 = 59;
    WIO_E5 = 60;
    RADIOMASTER_900_BANDIT = 61;
    ME25LS01_4Y10TD = 62;
    RP2040_LORA = 63;
    WIPHONE = 64;
}

enum Role {
    CLIENT = 0;
    CLIENT_MUTE = 1;
    ROUTER = 2;
    ROUTER_CLIENT = 3;
    REPEATER = 4;
    TRACKER = 5;
    SENSOR = 6;
    TAK = 7;
    CLIENT_HIDDEN = 8;
    LOST_AND_FOUND = 9;
    TAK_TRACKER = 10;
}

enum LocationSource {
    LOC_UNSET = 0;
    LOC_MANUAL = 1;
    LOC_INTERNAL = 2;
    LOC_EXTERNAL = 3;
}

enum RegionCode {
    UNSET_REGION = 0;
    US = 1;
    EU_433 = 2;
    EU_868 = 3;
    CN = 4;
    JP = 5;
    ANZ = 6;
    KR = 7;
    TW = 8;
    RU = 9;
    IN = 10;
    NZ_865 = 11;
    TH = 12;
    LORA_24 = 13;
    UA_433 = 14;
    UA_868 = 15;
    MY_433 = 16;
    MY_919 = 17;
    SG_923 = 18;
}

enum ModemPreset {
    LONG_FAST = 0;
    LONG_SLOW = 1;
    VERY_LONG_SLOW = 2;
    MEDIUM_SLOW = 3;
    MEDIUM_FAST = 4;
    SHORT_SLOW = 5;
    SHORT_FAST = 6;
    LONG_MODERATE = 7;
    SHORT_TURBO = 8;
}

enum RebootOTASeconds {
    option allow_alias = true;
    REBOOT_OTA_SECONDS_UNSET = 0;
    REBOOT_OTA_SECONDS_10 = 10;
    REBOOT_OTA_SECONDS_30 = 30;
    REBOOT_OTA_SECONDS_60 = 60;
    REBOOT_OTA_SECONDS_300 = 300;
    REBOOT_OTA_SECONDS_DEFAULT = 300;
}

enum AddressMode {
    DHCP = 0;
    STATIC = 1;
}

enum GpsCoordinateFormat {
    DEC = 0;
    DMS = 1;
    UTM = 2;
    MGRS = 3;
    OLC = 4;
    OSGR = 5;
}

enum DisplayUnits {
    METRIC = 0;
    IMPERIAL = 1;
}

enum OledType {
    OLED_AUTO = 0;
    OLED_SSD1306 = 1;
    OLED_SH1106 = 2;
    OLED_SH1107 = 3;
}

enum DisplayMode {
    DEFAULT = 0;
    TWOCOLOR = 1;
    INVERTED = 2;
    COLOR = 3;
}

enum PairingMode {
    RANDOM_PIN = 0;
    FIXED_PIN = 1;
    NO_PIN = 2;
}

enum ErrorReason {
    NONE = 0;
    NO_ROUTE = 1;
    GOT_NAK = 2;
    TIMEOUT = 3;
    NO_INTERFACE = 4;
    MAX_RETRANSMIT = 5;
    NO_CHANNEL = 6;
    TOO_LARGE = 7;
    NO_RESPONSE = 8;
    DUTY_CYCLE_LIMIT = 9;
    BAD_REQUEST = 10;
    NOT_AUTHORIZED = 11;
    PKI_FAILED = 12;
    PKI_UNKNOWN_PUBKEY = 13;
    ADMIN_BAD_SESSION = 14;
}
